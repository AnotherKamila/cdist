#!/bin/sh
#
# 2010-2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
# Run all manifests 
#

. cdist-config
[ $# -eq 1 ] || __cdist_usage "<target host>"
set -eu

__cdist_target_host="$1"; shift

__cdist_objects_list="${__cdist_tmp_dir}/objects_file"
__cdist_new_objects_list="${__cdist_tmp_dir}/new_objects_file"

# Loop until we do not create new objects anymore
# which is equal to all objects have been run
__cdist_new_objects_created=y
while [ "$__cdist_new_objects_created" = "y"  ]; do
   # Assume we're done after this run
   __cdist_new_objects_created=n

   __cdist_object_list "$__cdist_out_object_dir" > "$__cdist_objects_list"

   # Check every object, if we need to run it
   while read __cdist_object_self; do
      # Full path to current object
      __cdist_cur_object_dir="$(__cdist_object_dir "$__cdist_object_self")"

      # Only the id
      __cdist_object_id="$(__cdist_object_id_from_object "$__cdist_object_self")"

      if [ ! -f "${__cdist_cur_object_dir}/$__cdist_name_object_finished" ]; then
         echo "Checking manifest for ${__cdist_object_self} ..."

         __cdist_type="$(__cdist_type_from_object "$__cdist_object_self")"
         __cdist_manifest="$(__cdist_type_manifest "${__cdist_type}")"

         if [ -f "$__cdist_manifest" ]; then
            if [ -x "$__cdist_manifest" ]; then
               # Make __cdist_manifest available for cdist-type-emulator
               export __cdist_manifest

               echo "Executing manifest ${__cdist_manifest} ..."
               # Make variables available to non-core - FIXME: beatify
               export $__cdist_name_var_object="$__cdist_cur_object_dir"
               export $__cdist_name_var_object_id="$__cdist_object_id"
               export $__cdist_name_var_type="$(__cdist_type_dir "$__cdist_type")"

               cdist-manifest-run "$__cdist_target_host" "$__cdist_manifest"
               __cdist_new_objects_created=y
            else
               __cdist_exit_err "${__cdist_manifest} needs to be executable."
            fi
         fi
      fi

      # done with this object
      touch "$__cdist_cur_object_dir/$__cdist_name_object_finished"
   done < "$__cdist_objects_list"
done
