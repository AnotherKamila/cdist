#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# 2010-2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
#

import argparse
import logging
import os
import re
import sys

log = logging.getLogger(__name__)

# Ensure our /lib/ is included into PYTHON_PATH
sys.path.insert(0, os.path.abspath(
        os.path.join(os.path.dirname(os.path.realpath(__file__)), '../lib')))

TYPE_PREFIX = "__"

def commandline():
    """Parse command line"""
    # Construct parser others can reuse
    parser = {}
    # Options _all_ parsers have in common
    parser['most'] = argparse.ArgumentParser(add_help=False)
    parser['most'].add_argument('-d', '--debug',
        help='Set log level to debug', action='store_true')

    # Main subcommand parser
    parser['main'] = argparse.ArgumentParser(description='cdist ' + cdist.VERSION)
    parser['main'].add_argument('-V', '--version',
        help='Show version', action='version',
        version='%(prog)s ' + cdist.VERSION)
    parser['sub'] = parser['main'].add_subparsers(title="Commands")

    # Banner
    parser['banner'] = parser['sub'].add_parser('banner', 
        add_help=False)
    parser['banner'].set_defaults(func=cdist.banner.banner)

    # Config and install (common stuff)
    parser['configinstall'] = argparse.ArgumentParser(add_help=False)
    parser['configinstall'].add_argument('host', nargs='+',
        help='one or more hosts to operate on')
    parser['configinstall'].add_argument('-c', '--cdist-home',
         help='Change cdist home (default: .. from bin directory)',
         action='store')
    parser['configinstall'].add_argument('-i', '--initial-manifest', 
         help='Path to a cdist manifest',
         dest='manifest', required=False)
    parser['configinstall'].add_argument('-p', '--parallel',
         help='Operate on multiple hosts in parallel',
         action='store_true', dest='parallel')
    parser['configinstall'].add_argument('-s', '--sequential',
         help='Operate on multiple hosts sequentially (default)',
         action='store_false', dest='parallel')

    # Config
    parser['config'] = parser['sub'].add_parser('config',
        parents=[parser['most'], parser['configinstall']])
    parser['config'].set_defaults(func=cdist.config.config)

    # Install
    parser['install'] = parser['sub'].add_parser('install',
        parents=[parser['most'], parser['configinstall']])
    parser['install'].set_defaults(func=cdist.install.install)

    for p in parser:
        parser[p].epilog = "Get cdist at http://www.nico.schottelius.org/software/cdist/"

    args = parser['main'].parse_args(sys.argv[1:])

    # Most subcommands have --debug, so handle it here
    if 'debug' in args:
        if args.debug:
            logging.root.setLevel(logging.DEBUG)
    log.debug(args)

    args.func(args)

if __name__ == "__main__":
    try:
        logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

        if re.match(TYPE_PREFIX, os.path.basename(sys.argv[0])):
            import cdist.emulator
            cdist.emulator.emulator(sys.argv)
        else:
            import cdist
            import cdist.banner
            import cdist.config
            import cdist.exec
            import cdist.install
            import cdist.path

            commandline()
    except KeyboardInterrupt:
        sys.exit(0)
    except cdist.Error as e:
        log.error(e)
        sys.exit(1)
