#!/bin/sh
#
# 2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
# 
# For each created object check the explorers and run them if needed.
#

. cdist-config
[ $# -eq 2 ] || __cdist_usage "<target host> <object_base_dir>"
set -eux

__cdist_target_host="$1"; shift
__cdist_object_base_dir="$1"; shift

################################################################################
# New code
#
object_listing="$__cdist_tmp_dir/objects"
type_listing_all="$__cdist_tmp_dir/types_all"
type_listing="$__cdist_tmp_dir/types"

# Get listing of objects
__cdist_object_list "$__cdist_object_base_dir" > "$object_listing"

# Get listing of types used
while read object; do
   echo "$(__cdist_type_from_object "$object")" >> "$type_listing_all"
done < "$object_listing"
sort "$type_listing_all" | uniq > "$type_listing"

# Create pseudo array to avoid issues with ssh
tc=0
while read type; do
   eval type_$tc=\"\$type\"
   tc=$((tc+1))
done < "$type_listing"

# For every type that has explorers, Transfer the explorers
i=0
while [ "$i" -le "$tc" ]; do
   eval cur_type=\"type_$i\"

   src_dir="$(__cdist_type_explorer_dir "$cur_type")"
   dst_dir="$(__cdist_remote_type_explorer_dir "$cur_type")"

   if [ -d "$src_dir" ]; then
      cdist-dir push "$__cdist_target_host" "$src_dir" "$dst_dir"
   fi
   i=$((i+1))
done

################################################################################
# Explorer execution per object
#

# need to create pseudo array, as ssh in cdist-explorer-run will destroy while-read loops
while read object; do
   set -- "$@" "$object"
done < "$object_listing"

# For every object of a type that has explorers, execute the explorers
# and retrieve the results

while [ $# -gt 0 ]; do
   object="$1"; shift
   object_id="$(__cdist_object_id_from_object "$object")"
   type="$(__cdist_type_from_object "$object")"

   local_src_dir="$(__cdist_type_explorer_dir "$type")"
   local_dst_dir="$__cdist_object_base_dir/${object}/${__cdist_name_explorer}"

   # FIXME: remove path concatenation from here and construct paths only in
   # cdist-config!
   remote_src_dir="$__cdist_remote_cache_dir/$__cdist_name_type/$type/$__cdist_name_explorer"

   set -x
   # Contains parameters + output of explorers
   remote_object_dir="$__cdist_remote_cache_dir/$__cdist_name_object/$object"
   remote_dst_dir="$remote_object_dir/$__cdist_name_explorer"

   # Also copy parameters
   # FIXME: add function to copy whole host specific tree!
   local_params_dir="$__cdist_object_base_dir/$object/$__cdist_name_params"

   # Copy directory, needs to be one level above, otherwise subdir is created
   # FIXME: add -q later
   ssh "${__cdist_remote_user}@${__cdist_target_host}" "mkdir -p \"$remote_object_dir\""

   # 
   ssh "${__cdist_remote_user}@${__cdist_target_host}" "mkdir -p \"$remote_object_dir\""

   scp -r "$local_params_dir" "${__cdist_remote_user}@${__cdist_target_host}:$remote_object_dir"

   if [ -d "$local_src_dir" ]; then
      echo "Executing explorers for $object ..."
      cdist-explorer-run "$__cdist_target_host" \
         "$local_src_dir"  "$local_dst_dir"     \
         "$remote_src_dir" "$remote_dst_dir"    \
         "$object_id"
   fi
   set +x
done
